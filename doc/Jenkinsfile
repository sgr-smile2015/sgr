#!groovy
def DOCKER_NUM = 'sgr0.docker.com/test'
def DOCKER_TAG = "${DOCKER_NUM}/pyweb:${GitTag}"
//def DOCKER_TAG = "${DOCKER_NUM}/pyweb:${BUILD_NUMBER}"

node {

   stage('拉取代码') {
      // for display purposes
      // Get some code from a GitHub repository
    echo "git clone code tag is ${GitTag}"
    //git 'http://yangqihai@192.168.1.46/dev/test.git/'
    git  branch: 'fix',
         credentialsId: '05928e2d-f169-423b-b8cc-716c83c80fa3',
         url: 'git@192.168.1.46:dev/test.git',
         tag: "${GitTag}"
    sh "git checkout ${GitTag}"
    }

   stage('构建镜像') {
       // Get source code for gitlab
       // build docker image
       echo "docker build image ${DOCKER_NUM}/pyweb:${GitTag}"
       def app = docker.build "${DOCKER_TAG}"
       app.push "${GitTag}"
   }

   stage('发布镜像') {
      //mail to admin
      /***
      mail to: 'yang@ipin.com',
           subject: "Job '${env.JOB_NAME}' (${env.BUILD_NUMBER})等待测试",
           body: "Please go to ${env.BUILD_URL}."
      ***/

        echo "发布镜像"
        sh "sed -i 's@sgr0.docker.com/test/pybase:.*@${DOCKER_TAG}@g' docker-compose.yml"
        sh "cp docker-compose.yml /data/playbook/files/"

        // copy docker-compose.yml to system and restart container
        ansiblePlaybook installation: 'ansible1.5.4',
                        inventory: '/data/playbook/hosts',
                        playbook: '/data/playbook/copy_image.yml',
                        extras: "--extra-vars host=${dev_server}",
                        sudoUser: null
   }

   // stage('测试') {
   // input message: '测试是否成功?', ok: 'Yes'
   //}

stage ('清理镜像') {
       echo "clean docker images a weeks ago"
       sh "docker rmi ${DOCKER_TAG}"
       //deleteDir()
      }

}
